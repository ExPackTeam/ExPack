@import "./margins";
@mixin Alignment($align, $place) {
	@if $align == "align" {
		.align-#{$place} {
			@if $place == "center" {
					justify-content: $place;
					// display moved to "./display.scss"
					margin: 0 auto;
			} @else if $place == "centre" {
				justify-content: center;
			} @else {
				float: unquote($place);
			}
		}
	}
	@else if $align == "justify" {
		.just-#{$place} {
			@if $place != "centre" {
				justify-content: unquote($place);
			} @else {
				justify-content: center;
			}
		}
	}
	@else if $align == "text" {
		.text-#{$place} {
			@if $place != "centre" {
				text-align: unquote($place);
			} @else {
				text-align: center;
			}
		}
	}
}
@mixin Position($name, $type) {
	.pos-#{$name} {
		position: unquote($type);
	}
}
// Alignment
@include Alignment("align", "left");
@include Alignment("align", "center");
@include Alignment("align", "centre");
@include Alignment("align", "right");
// Justify 
@include Alignment("justify", "left");
@include Alignment("justify", "center");
@include Alignment("justify", "centre");
@include Alignment("justify", "right");
// Text
@include Alignment("text", "left");
@include Alignment("text", "center");
@include Alignment("text", "centre");
@include Alignment("text", "right");
@include Alignment("text", "justify");
// Position
@include Position("position", "absolute");
@include Position("position", "fixed");
@include Position("position", "inherit");
@include Position("position", "initial");
@include Position("position", "relative");
@include Position("position", "revert");
@include Position("position", "revert-layer");
@include Position("position", "static");
@include Position("position", "sticky");
@include Position("position", "unset");